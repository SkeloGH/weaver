#! /usr/bin/env node
/* eslint-disable no-unused-expressions */ /* eslint-disable no-console */"use strict";require("core-js/modules/es.symbol.description");const Debug=require("debug"),argv=require("yargs"),logging=Debug("Weaver:bin:cli"),options=require("./options"),cmd=require("./commands"),{parseOptions}=require("./options/parse"),{verboseMode,isCalledWithParams}=require("./lib/utils");argv.check(verboseMode).scriptName("weaver").usage("Usage: $0 [OPTIONS] COMMAND [ARG...]").usage("       $0 [ --help | -v | --version ]").options(options).command(cmd.run.name,cmd.run.description,cmd.run.setup,cmd.run.parse).command(cmd.cfg.name,cmd.cfg.description,cmd.cfg.setup,cmd.cfg.parse).command(cmd.add.name,cmd.add.description,cmd.add.setup,cmd.add.parse).command(cmd.rm.name,cmd.rm.description,cmd.rm.setup,cmd.rm.parse).strict(!0).check(isCalledWithParams).fail((a,b,c)=>{if(logging("Error",c),b)throw b;// preserve stack
isCalledWithParams()?console.error(a):console.error(c.help()),process.exit()}).wrap(argv.terminalWidth()).showHelpOnFail(!1,"Specify --help for available options").help().argv,parseOptions(argv.parsed.argv);