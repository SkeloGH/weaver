"use strict";const fs=require("fs"),shell=require("shelljs"),{getJSONContent,validateConfig,isValidConfigObject}=require("../options/config"),{absPathname,getCLIJSONContent}=require("../options/shared");let CLI_ARGS={};const readConfigFile=()=>{let a={};const b=getCLIJSONContent(),c=b.filePath,d=validateConfig(c).valid;return d&&(a=getJSONContent(c)),{config:a.config||{filePath:null},queries:a.queries||null,dataClients:a.dataClients||null,jsonConfig:a.jsonConfig||null}},parseCLIConfig=()=>{const{queries:a}=CLI_ARGS,b=CLI_ARGS["json-file"]?{filePath:CLI_ARGS["json-file"]}:null;// not implemented
return{queries:a,dataClients:null,jsonConfig:b}},readCLISettings=()=>{const a=parseCLIConfig(),b=getCLIJSONContent(),c=a.queries||b.queries,d=a.dataClients||b.dataClients,e=a.jsonConfig||b.jsonConfig;return{queries:c||null,dataClients:d||null,jsonConfig:e||null}},getQueries=(a,b)=>{let c=null;return a.queries&&0<a.queries.length&&({queries:c}=a),!c&&b.queries&&b.queries.length&&({queries:c}=b),c=c||[],c},getConfig=(a={})=>{CLI_ARGS=a;const b=readConfigFile(),c=readCLISettings(),{config:d}=b,e=getQueries(b,c),f=b.dataClients||c.dataClients||[],g=b.jsonConfig||c.jsonConfig||{};return{config:d,queries:e,dataClients:f,jsonConfig:g}},setConfig=(a={})=>{const b=isValidConfigObject(a),c=absPathname(__dirname,"./../.config.json");if(b)try{return fs.writeFileSync(c,JSON.stringify(a,null,2)),!0}catch(a){return shell.echo(JSON.stringify(a)),!1}return!1};module.exports={readConfigFile,parseCLIConfig,readCLISettings,getConfig,setConfig};